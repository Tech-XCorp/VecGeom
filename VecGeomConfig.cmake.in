# - Config file for the VecGeom package
# Defines the following variables
#   VECGEOM_FOUND             - Found the VECGEOM library
#   VECGEOM_INCLUDE_DIRS      - include directories for VecGeom
#   VECGEOM_LIBRARIES         - libraries to link against
#   VECGEOM_DEFINITIONS       - some core flags used to build the vecgeom library and which need to be reused
#                               in projects using VecGeom
#   VECGEOM_INSTALL_DIR       - the top level installation path
#   VECGEOM_EXTERNAL_INCLUDES - external include paths used during vecgeom compilation (for automatic "discovery" of dependencies)
#   VECGEOM_C_COMPILER        - the C compiler used to compile VecGeom
#   VECGEOM_CXX_COMPILER      - the CXX compiler used to compile VecGeom

@PACKAGE_INIT@

# Refind required dependencies
include(CMakeFindDependencyMacro)

# Always VecCore
set(VecGeom_BUILTIN_VECCORE @BUILTIN_VECCORE@)
if(VecGeom_BUILTIN_VECCORE)
  # Must find our builtin where we expect
  find_dependency(VecCore @VecCore_VERSION@ NO_DEFAULT_PATH PATHS "@PACKAGE_VECCORE_PREFIX@" COMPONENTS @VecCore_COMPONENTS@ )
else()
  find_dependency(VecCore @VecCore_VERSION@ COMPONENTS @VecCore_COMPONENTS@)
endif(

)
# Optional CUDA (no dependency?)
set(VecGeom_CUDA_FOUND @VECGEOM_ENABLE_CUDA@)
set(VECGEOM_CUDA_ARCH "@CUDA_ARCH@")

# Optional GDML (Xerces-C)
set(VecGeom_GDML_FOUND @GDML@)
if(VecGeom_GDML_FOUND)
  find_dependency(XercesC)
endif()

# To be reviewed - Geant4 may only be for testing/benchmarking
set(VECGEOM_GEANT4 @VECGEOM_GEANT4@)

# Include our target definitions
include("${CMAKE_CURRENT_LIST_DIR}/VecGeomTargets.cmake")

# Older variables/defs
set(VECGEOM_C_COMPILER "@CMAKE_C_COMPILER@")
set(VECGEOM_CXX_COMPILER "@CMAKE_CXX_COMPILER@")
set(VECGEOM_CXX_FLAGS "${CMAKE_CXX_FLAGS} @VECGEOM_COMPILATION_FLAGS@")
set(VECGEOM_COMPILE_OPTIONS @VECGEOM_COMPILATION_FLAGS@)

get_filename_component(THIS_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
set(VECGEOM_INCLUDE_DIR "@CONF_INCLUDE_DIR@")
set(VECGEOM_EXTERNAL_INCLUDES "@VECGEOM_EXTERNAL_INCLUDES@")
set(VECGEOM_INCLUDE_DIRS ${VECGEOM_INCLUDE_DIR} ${VECGEOM_EXTERNAL_INCLUDES})

set(VECGEOM_LIBRARIES VecGeom::vecgeom)
if(TARGET VecGeom::vecgeomcuda)
  list(APPEND VECGEOM_LIBRARIES VecGeom::vecgeomcuda)
endif()
if(TARGET VecGeom::vecgeomcuda_static)
  set(VECGEOM_CUDA_STATIC_LIBRARY VecGeom::vecgeomcuda_static)
endif()

check_required_components(VecGeom)
