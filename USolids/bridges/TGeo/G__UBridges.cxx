//
// File generated by /home/mgayer/root/bin/rootcint at Fri Jan 13 11:02:27 2012

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME bridgesdITGeodIG__UBridges
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__UBridges.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TGeoUShape_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TGeoUShape(void *p = 0);
   static void *newArray_TGeoUShape(Long_t size, void *p);
   static void delete_TGeoUShape(void *p);
   static void deleteArray_TGeoUShape(void *p);
   static void destruct_TGeoUShape(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TGeoUShape*)
   {
      ::TGeoUShape *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TGeoUShape >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TGeoUShape", ::TGeoUShape::Class_Version(), "./bridges/TGeo/TGeoUShape.h", 17,
                  typeid(::TGeoUShape), DefineBehavior(ptr, ptr),
                  &::TGeoUShape::Dictionary, isa_proxy, 4,
                  sizeof(::TGeoUShape) );
      instance.SetNew(&new_TGeoUShape);
      instance.SetNewArray(&newArray_TGeoUShape);
      instance.SetDelete(&delete_TGeoUShape);
      instance.SetDeleteArray(&deleteArray_TGeoUShape);
      instance.SetDestructor(&destruct_TGeoUShape);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TGeoUShape*)
   {
      return GenerateInitInstanceLocal((::TGeoUShape*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TGeoUShape*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TGeoUShape::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGeoUShape::Class_Name()
{
   return "TGeoUShape";
}

//______________________________________________________________________________
const char *TGeoUShape::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TGeoUShape*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGeoUShape::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TGeoUShape*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGeoUShape::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TGeoUShape*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGeoUShape::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TGeoUShape*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TGeoUShape::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGeoUShape.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TGeoUShape::Class(),this);
   } else {
      R__b.WriteClassBuffer(TGeoUShape::Class(),this);
   }
}

//______________________________________________________________________________
void TGeoUShape::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TGeoUShape.
      TClass *R__cl = ::TGeoUShape::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fUSolid", &fUSolid);
      TGeoBBox::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TGeoUShape(void *p) {
      return  p ? new(p) ::TGeoUShape : new ::TGeoUShape;
   }
   static void *newArray_TGeoUShape(Long_t nElements, void *p) {
      return p ? new(p) ::TGeoUShape[nElements] : new ::TGeoUShape[nElements];
   }
   // Wrapper around operator delete
   static void delete_TGeoUShape(void *p) {
      delete ((::TGeoUShape*)p);
   }
   static void deleteArray_TGeoUShape(void *p) {
      delete [] ((::TGeoUShape*)p);
   }
   static void destruct_TGeoUShape(void *p) {
      typedef ::TGeoUShape current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGeoUShape

/********************************************************
* bridges/TGeo/G__UBridges.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__UBridges();

extern "C" void G__set_cpp_environmentG__UBridges() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("bridges/TGeo/TGeoUShape.h");
  G__cpp_reset_tagtableG__UBridges();
}
#include <new>
extern "C" int G__cpp_dllrevG__UBridges() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TGeoUShape */
static int G__G__UBridges_186_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TGeoUShape* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGeoUShape[n];
     } else {
       p = new((void*) gvp) TGeoUShape[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGeoUShape;
     } else {
       p = new((void*) gvp) TGeoUShape;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__UBridgesLN_TGeoUShape));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__UBridges_186_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TGeoUShape* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TGeoUShape((const char*) G__int(libp->para[0]), (VUSolid*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TGeoUShape((const char*) G__int(libp->para[0]), (VUSolid*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__UBridgesLN_TGeoUShape));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__UBridges_186_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TGeoUShape::TestBox();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__UBridges_186_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TGeoUShape::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__UBridges_186_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGeoUShape::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__UBridges_186_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TGeoUShape::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__UBridges_186_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TGeoUShape::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__UBridges_186_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGeoUShape*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__UBridges_186_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGeoUShape::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__UBridges_186_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TGeoUShape::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__UBridges_186_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGeoUShape::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__UBridges_186_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TGeoUShape::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__UBridges_186_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TGeoUShape* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TGeoUShape(*(TGeoUShape*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__UBridgesLN_TGeoUShape));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGeoUShape G__TTGeoUShape;
static int G__G__UBridges_186_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TGeoUShape*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TGeoUShape*) (soff+(sizeof(TGeoUShape)*i)))->~G__TTGeoUShape();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TGeoUShape*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TGeoUShape*) (soff))->~G__TTGeoUShape();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__UBridges_186_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TGeoUShape* dest = (TGeoUShape*) G__getstructoffset();
   *dest = *(TGeoUShape*) libp->para[0].ref;
   const TGeoUShape& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TGeoUShape */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__UBridges {
 public:
  G__Sizep2memfuncG__UBridges(): p(&G__Sizep2memfuncG__UBridges::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__UBridges::*p)();
};

size_t G__get_sizep2memfuncG__UBridges()
{
  G__Sizep2memfuncG__UBridges a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__UBridges() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__UBridgesLN_TGeoUShape))) {
     TGeoUShape *G__Lderived;
     G__Lderived=(TGeoUShape*)0x1000;
     {
       TGeoBBox *G__Lpbase=(TGeoBBox*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__UBridgesLN_TGeoUShape),G__get_linked_tagnum(&G__G__UBridgesLN_TGeoBBox),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGeoShape *G__Lpbase=(TGeoShape*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__UBridgesLN_TGeoUShape),G__get_linked_tagnum(&G__G__UBridgesLN_TGeoShape),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__UBridgesLN_TGeoUShape),G__get_linked_tagnum(&G__G__UBridgesLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__UBridgesLN_TGeoUShape),G__get_linked_tagnum(&G__G__UBridgesLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__UBridges() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__UBridgesLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__UBridgesLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__UBridgesLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__UBridgesLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__UBridgesLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G__UBridgesLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__UBridgesLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__UBridgesLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__UBridgesLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__UBridgesLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TGeoUShape */
static void G__setup_memvarTGeoUShape(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__UBridgesLN_TGeoUShape));
   { TGeoUShape *p; p=(TGeoUShape*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__UBridgesLN_VUSolid),-1,-1,4,"fUSolid=",0,"Unified solid");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__UBridgesLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__UBridges() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTGeoUShape(void) {
   /* TGeoUShape */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__UBridgesLN_TGeoUShape));
   G__memfunc_setup("TGeoUShape",949,G__G__UBridges_186_0_1, 105, G__get_linked_tagnum(&G__G__UBridgesLN_TGeoUShape), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TGeoUShape",949,G__G__UBridges_186_0_2, 105, G__get_linked_tagnum(&G__G__UBridgesLN_TGeoUShape), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name U 'VUSolid' - 0 - solid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ComputeBBox",1096,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ComputeNormal",1350,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"D - 'Double_t' 0 - point D - 'Double_t' 0 - dir "
"D - 'Double_t' 0 - norm", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Contains",831,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "D - 'Double_t' 0 - point", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DistFromInside",1412,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 5, 1, 1, 8, 
"D - 'Double_t' 0 - point D - 'Double_t' 0 - dir "
"i - 'Int_t' 0 '1' iact d - 'Double_t' 0 'TGeoShape::Big()' step "
"D - 'Double_t' 0 '0' safe", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DistFromOutside",1541,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 5, 1, 1, 8, 
"D - 'Double_t' 0 - point D - 'Double_t' 0 - dir "
"i - 'Int_t' 0 '1' iact d - 'Double_t' 0 'TGeoShape::Big()' step "
"D - 'Double_t' 0 '0' safe", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Safety",620,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"D - 'Double_t' 0 - point g - 'Bool_t' 0 'kTRUE' in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Capacity",814,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TestBox",713,G__G__UBridges_186_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TGeoUShape::TestBox) ), 0);
   G__memfunc_setup("Class",502,G__G__UBridges_186_0_11, 85, G__get_linked_tagnum(&G__G__UBridgesLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TGeoUShape::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__UBridges_186_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGeoUShape::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__UBridges_186_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TGeoUShape::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__UBridges_186_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TGeoUShape::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__UBridgesLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__UBridges_186_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__UBridges_186_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGeoUShape::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__UBridges_186_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TGeoUShape::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__UBridges_186_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGeoUShape::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__UBridges_186_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TGeoUShape::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TGeoUShape", 949, G__G__UBridges_186_0_23, (int) ('i'), G__get_linked_tagnum(&G__G__UBridgesLN_TGeoUShape), -1, 0, 1, 1, 1, 0, "u 'TGeoUShape' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TGeoUShape", 1075, G__G__UBridges_186_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__UBridges_186_0_25, (int) ('u'), G__get_linked_tagnum(&G__G__UBridgesLN_TGeoUShape), -1, 1, 1, 1, 1, 0, "u 'TGeoUShape' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__UBridges() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__UBridges() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__UBridges() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__UBridgesLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__UBridgesLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__UBridgesLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__UBridgesLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__UBridgesLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__UBridgesLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__UBridgesLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__UBridgesLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G__UBridgesLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__UBridgesLN_TGeoBBox = { "TGeoBBox" , 99 , -1 };
G__linked_taginfo G__G__UBridgesLN_TGeoShape = { "TGeoShape" , 99 , -1 };
G__linked_taginfo G__G__UBridgesLN_VUSolid = { "VUSolid" , 99 , -1 };
G__linked_taginfo G__G__UBridgesLN_TGeoUShape = { "TGeoUShape" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__UBridges() {
  G__G__UBridgesLN_TClass.tagnum = -1 ;
  G__G__UBridgesLN_TBuffer.tagnum = -1 ;
  G__G__UBridgesLN_TMemberInspector.tagnum = -1 ;
  G__G__UBridgesLN_TObject.tagnum = -1 ;
  G__G__UBridgesLN_TNamed.tagnum = -1 ;
  G__G__UBridgesLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__UBridgesLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__UBridgesLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G__UBridgesLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__UBridgesLN_TGeoBBox.tagnum = -1 ;
  G__G__UBridgesLN_TGeoShape.tagnum = -1 ;
  G__G__UBridgesLN_VUSolid.tagnum = -1 ;
  G__G__UBridgesLN_TGeoUShape.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__UBridges() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__UBridgesLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__UBridgesLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__UBridgesLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__UBridgesLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__UBridgesLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__UBridgesLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__UBridgesLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__UBridgesLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__UBridgesLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__UBridgesLN_TGeoBBox);
   G__get_linked_tagnum_fwd(&G__G__UBridgesLN_TGeoShape);
   G__get_linked_tagnum_fwd(&G__G__UBridgesLN_VUSolid);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__UBridgesLN_TGeoUShape),sizeof(TGeoUShape),-1,324864,"an external USolid",G__setup_memvarTGeoUShape,G__setup_memfuncTGeoUShape);
}
extern "C" void G__cpp_setupG__UBridges(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__UBridges()");
  G__set_cpp_environmentG__UBridges();
  G__cpp_setup_tagtableG__UBridges();

  G__cpp_setup_inheritanceG__UBridges();

  G__cpp_setup_typetableG__UBridges();

  G__cpp_setup_memvarG__UBridges();

  G__cpp_setup_memfuncG__UBridges();
  G__cpp_setup_globalG__UBridges();
  G__cpp_setup_funcG__UBridges();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__UBridges();
  return;
}
class G__cpp_setup_initG__UBridges {
  public:
    G__cpp_setup_initG__UBridges() { G__add_setup_func("G__UBridges",(G__incsetup)(&G__cpp_setupG__UBridges)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__UBridges() { G__remove_setup_func("G__UBridges"); }
};
G__cpp_setup_initG__UBridges G__cpp_setup_initializerG__UBridges;

