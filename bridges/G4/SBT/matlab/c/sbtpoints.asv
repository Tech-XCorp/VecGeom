function sbtpoints (method, name1, name2, first, count)    
    maxPoints = 100000;
    if (nargin < 3)
        name2 = '';
        filename2 = '';
    else
       filename2 = [method name2 '.dat'];        
    end
    if (nargin < 4)
        first = 1;
    end
    if (nargin < 5)
        count = -1;
    end
    realcount = count;
    if count==1
        realcount = 2;
    end
    filenamePoints = [method 'Points.dat'];
    filename1 = [method name1 '.dat'];
    figure;
    hold on;
    
    points = subarray (dif (filenamePoints, ''), first, realcount);
    len = size(points, 1);    
    tit = ['Folder: ' dirname() '; Method: ' method '; Software: '];
    val = subarray (dif(filename1, filename2), first, realcount);    
    if (~isempty (name2))
       tit = [tit name1 '-' name2];
       
       if (size(val, 2) == 3)
        val = magnitude(val);
       end
       
       newpoints = points;
       newval = val;
       current = 0;
       if count < 0
          loopcount = len;
       else
          loopcount = count;
       end
       for i = 1:loopcount
           difference = val(i);
           if abs(difference) > 1e-6
               current = current+1;          
%                newpoints(current,:) = points(i,:);
%                newval(current,:) = val(i,:);
               indexes(current) = i;
               if (current < 1000)
                    disp (['Different point found, index ' int2str(i+first-1) ' difference is ' num2str(difference)]);
               end
           end;
       end
       newpoints = arrayfilter(newpoints,indexes);
       newval = arrayfilter(newval,indexes);
       
       difstr = ['Total number of different points: ' int2str(current)];
       tit = [tit ';' difstr];
       disp (difstr);
       bp = newpoints;
       bpval = newval;
        if count==1
            bp(2,:) = bp(1,:);
            bpval(2) = bpval(1);
            bpval(1) = 0;
        end       
       if len <= maxPoints
          scatter3 (bp(:,1), bp(:,2), bp(:,3), 200, 'r');
          scatter3 (bp(:,1), bp(:,2), bp(:,3), 100, bpval, 'filled');
       end
    else
        tit = [tit name1];
    end
    if len <= maxPoints
        val = magnitude(val);
        pointsize = 25;
        pointsizes = linspace (10, 100, length(val));
        pointsizes = pointsizes';
        colormap('default');
    %     val = linspace (0, 1, length(val));
        if count==1
            points(2,:) = points(1,:);
            val(2) = val(1);
            val(1) = 0;
        end
        if count == 1
            diameter = val(2);
            center = points(2,:);
            plotSphere(diameter, center);
        end
         scatter3 (points(:,1), points(:,2), points(:,3), pointsize, val, 'filled'); % sizes        
         colorbar;
         title(tit);
        hold off;
    else
        disp(['Too many points ' num2str(len) ' , set max parameter to visualize maximally ' num2str(maxPoints)]);
    end
end

function mag = magnitude (val)
    len = length(val);
    mag = zeros(len, 1);
    for i=1:len
       mag(i,:) = norm(val(i,:));
    end
end

function plotSphere(r,center)
    [x,y,z] = sphere(100);      %# Makes a 21-by-21 point unit sphere 
    obj = surface(r*x+center(1),r*y+center(2),r*z+center(3),'Facecolor','b','EdgeColor','k');  %# Plot the surface, multiplying unit coordinates with radii 
    alpha(obj, 0.1);
    axis square;            %# Make the scaling on the x, y, and z axes equal
end

function res = arrayfilter(array, indexes)
    len = length(array);
    index = 0;
    reslen = length(indexes);
    res = array(1:reslen,:);
    for i=1:len
        index = index + 1;
        res(index,:) = array(i);
    end
end
